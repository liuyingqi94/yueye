软件生命周期
	描述软件一个版本的迭代过程
	计划：
	需求：
	设计：
	编码：
	测试：
	维护：
	
	
测试的四个过程
	单元测试UT：
		测试软件的最小单元（函数），验证软件是否满足LLD（详细设计说明书）的要求
	集成测试IT：
		测试软件组装之后的模块，以及模块与模块之间的接口，验证软件是否满足HLD（概要设计说明书）的要求
	系统测试ST：
		测试软件的整体外部特性（功能，易用性，性能等），验证软件是否满足SRS（需求规格说明书）的要求
	验收测试AT：
		从用户的角度来验证软件是否满足用户的需求
	
回归测试
	验证Bug是否被修复的过程
	完全回归测试：
		消耗时间人力（考验项目组自动化测试的能力）
	选择性回归测试：
		已发现的Bug正确被修复，未引入新Bug
		用户频繁使用的功能
		软件的整体业务流程通畅
		
软件测试的四个活动
每个测试阶段都会有这四个活动
	计划：
		测试经理输出《测试计划》，从管理角度规划版本测试工作 who what when
	设计：
		高级测试工程师根据SRS（需求规格说明书）和测试计划输出《测试方案》，从技术角度规划当前版本的测试工作如何实现 how
	实现：
		测试工程师根据SRS（需求规格说明书）测试计划和测试方案输出《测试用例》
	执行：
		搭建测试环境（安装服务器端和客户端后运行）
		冒烟测试（验证软件最基础的功能，确认当前版本的需求基本实现，保证测试用例可以正常执行）
			在测试用例中抽选20%左右进行冒烟测试，冒烟测试不通过需把测试版本打回给开发重新编码
		执行测试用例（按照测试用例的操作步骤操作软件，对比软件的实际结果和测试用例的预期结果，不一致则可能为Bug，需反复确认）
		提交和跟踪Bug（测试发现Bug，开发修改Bug，测试需协助开发重现和定位Bug）
		选择性回归测试
		写日报，汇报每日进度和问题（测试经理会关注进度和协助解决问题）
		写测试报告（测试经理编写，汇总和给出测试结果，项目经理根据结果判断软件是否能发布）
		
					计划				设计												实现				执行
测试经理/组长		输出测试计划；		输出测试方案，制定测试方法，测试工具，测试规程等；	组织测试用例评审；	搭建测试环境；
					组织需求评审；		组织测试思路评审；														组织每日例会；
					组织测试计划评审；																			汇总日报，编写测试组的测试日报；
																												跟踪小组的工作进度；
																												处理工作阻塞性问题；
																												测试执行完成后，进行测试分析，输出测试报告；
					
测试工程师			参与需求评审；		画流程图理解业务；									编写测试用例；		冒烟测试；
					参与测试计划评审；	进行测试需求分析，梳理测试思路；					用例评审；			执行测试用例；
										评审测试思路；															提交跟踪Bug；
																												选择性回归测试；
																												提交工作日报；